function[] = plot_figure_2(output_filename)

    close all; 
    
    % get path to skewnormal input files
    slash = '/'; if (ispc); slash = '\'; end
    directory = strcat('IEEE-TCST-2021',slash,'misc',slash,'skewnormal_example',slash);

    % handle missing files or load data
    means_filepath = strcat(directory, 'skewnormal_example_means.mat');
    variances_filepath = strcat(directory, 'skewnormal_example_variances.mat');
    controls_filepath = strcat(directory, 'skewnormal_example_controls.mat');
    error_message_base = 'The file can be generated by running the skewnormal_example.nb in Mathematica or downloaded from https://github.com/Risk-Sensitive-Reachability/IEEE-TCST-2021.';
    if ~isfile(means_filepath)
        error(['Expected skewnormal_example_means.mat in misc/skewnormal_example. ', error_message_base]);
    end
    if ~isfile(variances_filepath)
        error(['Expected skewnormal_example_variances.mat in misc/skewnormal_example.', error_message_base]);
    end
    if ~isfile(controls_filepath)
        error(['Expected skewnormal_example_controls.mat in misc/skewnormal_example.', error_message_base]);
    end
    means = load('skewnormal_example_means.mat', 'Expression1').Expression1;
    variances = load('skewnormal_example_variances.mat', 'Expression1').Expression1;
    controls = load('skewnormal_example_controls.mat', 'Expression1').Expression1; 

    % plot mean-variance tradeoffs in phi(u) for u in [0, 0.25]
    figure
    plot(variances, means, 'LineWidth', 2);
    title('Mean vs. Variance of $$\phi$$ for $u \in [0, 0.25]$')
    xlabel('Variance of $$\phi(u, W)$$');
    ylabel('Mean of $$\phi(u, W)$$');
    xlim([2.05,2.4]);
    ylim([.98,1.14]);
    set(gca, 'FontSize', 13);
    grid off;

    % find points to put text labels for u
    umin = min(controls);
    umax = max(controls);
    umin_point = [variances(controls==umin), means(controls==umin)];
    umax_point = [variances(controls==umax), means(controls==umax)];
    text(umin_point(1)+0.01,umin_point(2),strcat('$u =', mat2str(umin), '$'), 'FontSize', 12);
    text(umax_point(1)+0.01,umax_point(2),strcat('$u =', mat2str(umax), '$'), 'FontSize', 12);

    set(gcf,'Units','Inches');
    pos = get(gcf, 'Position');
    set(gcf,'PaperPositionMode','Auto','PaperUnits','Inches','PaperSize',[pos(3), pos(4)])
    print(gcf,output_filename,'-dpdf','-r0')

end